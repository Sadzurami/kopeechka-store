var Kopeechka=function(r){"use strict";var t,a,e;(e=t=t||{}).ok="OK",e.error="ERROR",(e=a=a||{}).BAD_TOKEN="The client key is not valid.",e.BAD_SITE='The "website" argument is not correct.',e.BAD_DOMAIN='The "domains" argument is not correct.',e.BAD_BALANCE="There are not enough funds to perform the operation.",e.OUT_OF_STOCK="The requested domain is out of stock.",e.SYSTEM_ERROR="Unknown, server error. Contact support.",e.TIME_LIMIT_EXCEED="Address ordering limit per second has been reached.",e.NO_ACTIVATION="The server could not find the task.",e.ACTIVATION_CANCELED="The task was canceled.",e.WAIT_LINK="Message not received.",e["bad request"]="An incorrect request was sent.";class i extends Error{constructor(e){var s;super(null!=(s=a[e])?s:e),this.code=e}}return class{constructor(e){this.baseUrl="https://api.kopeechka.store",this.token=e,this.id="",this.address=""}async getBalance(){var e=await this.send("/user-balance");if(e.success)return e.data.balance;throw new i(e.message)}async getAddress(e){var e=this.cleanParams({site:e.website,mail_type:e.domains,sender:null==(s=e.filter)?void 0:s.sender,subject:null==(s=e.filter)?void 0:s.subject,soft:7}),s=await this.send("/mailbox-get-email",e);if(s.success)return this.id=s.data.id,this.address=s.data.mail,this.address;throw new i(s.message)}async reuseAddress(e){e=this.cleanParams({site:e.website,email:null!=(e=e.address)?e:this.address}),e=await this.send("/mailbox-reorder",e);if(e.success)return this.id=e.data.id,this.address=e.data.mail,!0;throw new i(e.message)}async releaseAddress(e){e=this.cleanParams({id:null!=e?e:this.id}),e=await this.send("/mailbox-cancel",e);if(e.success)return this.id="",!(this.address="");throw new i(e.message)}async getMessage(e={}){var{timeout:s=12e4,delay:t=1e4}=e,e={id:null!=(e=e.id)?e:this.id,full:1},e=await this.waitMessage(e,{timeout:s,delay:t});if(e.success)return e.data.fullmessage;throw new i(e.message)}async waitMessage(e,s){let{start:t=0,end:a=0,delay:i,timeout:r}=s;null!==t&&void 0!==t?t:t=Date.now(),null!==a&&void 0!==a?a:a=t+r;var n=await this.send("/mailbox-get-message",e);return"WAIT_LINK"===n.message&&a>Date.now()+i?(await this.wait(i),this.waitMessage(e,s)):n}async getDomains(e={temp:!0,popular:!0}){let s=[],t=(!0===e.temp&&(s=(s=await this.getTempDomains(e.website)).map(e=>({name:e}))),[]);return[...t=!0===e.popular?await this.getPopularDomains(e.website):t,...s]}async getPopularDomains(e){e=this.cleanParams({site:e,popular:1}),e=await this.send("/mailbox-zones",e);if(e.success)return e.data.popular;throw new i(e.message)}async getTempDomains(e){e=this.cleanParams({site:e}),e=await this.send("/mailbox-get-domains",e);if(e.success)return e.data.domains;throw new i(e.message)}async findTaskId(e){e=this.cleanParams({site:e.website,email:e.address}),e=await this.send("/mailbox-get-fresh-id",e);if(e.success)return e.data.id;throw new i(e.message)}async findTasks(e={}){e=this.cleanParams({site:e.website,comment:e.comment,email:e.address,count:e.limit}),e=await this.send("/mailbox-get-bulk",e);if(e.success)return e.data.items;throw new i(e.message)}async wait(s=0){return new Promise(e=>setTimeout(e,s))}cleanParams(e={}){return Object.fromEntries(Object.entries(e).filter(([,e])=>null!=e))}async send(e,s={}){s=new URLSearchParams({...s,token:this.token,type:"JSON",api:"2.0"}).toString(),e=""+this.baseUrl+e+"?"+s,s=await(await this.request(e,{method:"GET",retry:{limit:3},compress:!0})).json().catch(()=>null);if(null==s)throw new Error("Incorrect server response received");return{success:s.status===t.ok,message:s.status===t.ok?"ok":s.value,data:s}}async request(e,s){const{retry:t={limit:3},...a}=s,i=(null!=t.attempts||(t.attempts=0),t.attempts++,{});i.controller=new AbortController,i.id=setTimeout(()=>i.controller.abort(),1e4),a.signal=i.controller.signal;s=await r(e,a).then(e=>(clearTimeout(i.id),e)).catch(()=>null);if(!0===(null==s?void 0:s.ok))return s;if(t.attempts<t.limit)return await this.wait(1e3*Math.pow(2,t.attempts)+100),this.request(e,{retry:t,...a});throw new Error("Request failed")}}}(fetch);
